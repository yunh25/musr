"use strict";
// src/index.ts
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateAppConfig = exports.isPhotoRequestFromApp = exports.isRtmpStreamStopRequest = exports.isRtmpStreamRequest = exports.isDisplayRequest = exports.isAppSubscriptionUpdate = exports.isAppConnectionInit = exports.isKeepRtmpStreamAlive = exports.isStopRtmpStream = exports.isStartRtmpStream = exports.isSettingsUpdateToGlasses = exports.isPhotoRequest = exports.isAppStateChange = exports.isDisplayEvent = exports.isConnectionAck = exports.isPhoneNotificationDismissed = exports.isKeepAliveAck = exports.isRtmpStreamStatusFromGlasses = exports.isPhotoResponseFromGlasses = exports.isStopApp = exports.isStartApp = exports.isConnectionInit = exports.isHeadPosition = exports.isButtonPress = exports.HardwareRequirementLevel = exports.HardwareType = exports.AppSettingType = exports.ViewType = exports.LayoutType = exports.Language = exports.AppState = exports.AppType = exports.isRtmpStreamStatusFromCloud = exports.isPhotoResponseFromCloud = exports.isManagedStreamStatus = exports.isDashboardAlwaysOnChanged = exports.isDashboardModeChanged = exports.isStreamStatusCheckResponse = exports.isAudioChunk = exports.isDataStream = exports.isCapabilitiesUpdate = exports.isSettingsUpdate = exports.isAppStopped = exports.isAppConnectionError = exports.isAppConnectionAck = void 0;
__exportStar(require("./types/token"), exports);
// Message type enums
__exportStar(require("./types/message-types"), exports);
// Base message type
__exportStar(require("./types/messages/base"), exports);
// Messages by direction - export everything except the conflicting type guards
__exportStar(require("./types/messages/glasses-to-cloud"), exports);
__exportStar(require("./types/messages/cloud-to-glasses"), exports);
__exportStar(require("./types/messages/app-to-cloud"), exports);
// Utility exports
__exportStar(require("./utils/bitmap-utils"), exports);
__exportStar(require("./utils/animation-utils"), exports);
// Export cloud-to-app but exclude the conflicting type guards
var cloud_to_app_1 = require("./types/messages/cloud-to-app");
// Type guards (excluding isPhotoResponse and isRtmpStreamStatus which conflict)
Object.defineProperty(exports, "isAppConnectionAck", { enumerable: true, get: function () { return cloud_to_app_1.isAppConnectionAck; } });
Object.defineProperty(exports, "isAppConnectionError", { enumerable: true, get: function () { return cloud_to_app_1.isAppConnectionError; } });
Object.defineProperty(exports, "isAppStopped", { enumerable: true, get: function () { return cloud_to_app_1.isAppStopped; } });
Object.defineProperty(exports, "isSettingsUpdate", { enumerable: true, get: function () { return cloud_to_app_1.isSettingsUpdate; } });
Object.defineProperty(exports, "isCapabilitiesUpdate", { enumerable: true, get: function () { return cloud_to_app_1.isCapabilitiesUpdate; } });
Object.defineProperty(exports, "isDataStream", { enumerable: true, get: function () { return cloud_to_app_1.isDataStream; } });
Object.defineProperty(exports, "isAudioChunk", { enumerable: true, get: function () { return cloud_to_app_1.isAudioChunk; } });
Object.defineProperty(exports, "isStreamStatusCheckResponse", { enumerable: true, get: function () { return cloud_to_app_1.isStreamStatusCheckResponse; } });
Object.defineProperty(exports, "isDashboardModeChanged", { enumerable: true, get: function () { return cloud_to_app_1.isDashboardModeChanged; } });
Object.defineProperty(exports, "isDashboardAlwaysOnChanged", { enumerable: true, get: function () { return cloud_to_app_1.isDashboardAlwaysOnChanged; } });
Object.defineProperty(exports, "isManagedStreamStatus", { enumerable: true, get: function () { return cloud_to_app_1.isManagedStreamStatus; } });
// Re-export the cloud-to-app versions of these type guards since they're the ones
// that should be used when dealing with CloudToAppMessage types
Object.defineProperty(exports, "isPhotoResponseFromCloud", { enumerable: true, get: function () { return cloud_to_app_1.isPhotoResponse; } });
Object.defineProperty(exports, "isRtmpStreamStatusFromCloud", { enumerable: true, get: function () { return cloud_to_app_1.isRtmpStreamStatus; } });
// Stream types
__exportStar(require("./types/streams"), exports);
// Layout types
__exportStar(require("./types/layouts"), exports);
// Dashboard types
__exportStar(require("./types/dashboard"), exports);
// RTMP streaming types
__exportStar(require("./types/rtmp-stream"), exports);
// Other system enums
var enums_1 = require("./types/enums");
Object.defineProperty(exports, "AppType", { enumerable: true, get: function () { return enums_1.AppType; } });
Object.defineProperty(exports, "AppState", { enumerable: true, get: function () { return enums_1.AppState; } });
Object.defineProperty(exports, "Language", { enumerable: true, get: function () { return enums_1.Language; } });
Object.defineProperty(exports, "LayoutType", { enumerable: true, get: function () { return enums_1.LayoutType; } });
Object.defineProperty(exports, "ViewType", { enumerable: true, get: function () { return enums_1.ViewType; } });
Object.defineProperty(exports, "AppSettingType", { enumerable: true, get: function () { return enums_1.AppSettingType; } });
Object.defineProperty(exports, "HardwareType", { enumerable: true, get: function () { return enums_1.HardwareType; } });
Object.defineProperty(exports, "HardwareRequirementLevel", { enumerable: true, get: function () { return enums_1.HardwareRequirementLevel; } });
// Core model interfaces
__exportStar(require("./types/models"), exports);
// Session-related interfaces
__exportStar(require("./types/user-session"), exports);
// Webhook interfaces
__exportStar(require("./types/webhooks"), exports);
// Capability Discovery types
__exportStar(require("./types/capabilities"), exports);
// App session and server exports
__exportStar(require("./app/index"), exports);
// Logging exports
__exportStar(require("./logging/logger"), exports);
// Type guards - re-export the most commonly used ones for convenience
var glasses_to_cloud_1 = require("./types/messages/glasses-to-cloud");
Object.defineProperty(exports, "isButtonPress", { enumerable: true, get: function () { return glasses_to_cloud_1.isButtonPress; } });
Object.defineProperty(exports, "isHeadPosition", { enumerable: true, get: function () { return glasses_to_cloud_1.isHeadPosition; } });
Object.defineProperty(exports, "isConnectionInit", { enumerable: true, get: function () { return glasses_to_cloud_1.isConnectionInit; } });
Object.defineProperty(exports, "isStartApp", { enumerable: true, get: function () { return glasses_to_cloud_1.isStartApp; } });
Object.defineProperty(exports, "isStopApp", { enumerable: true, get: function () { return glasses_to_cloud_1.isStopApp; } });
Object.defineProperty(exports, "isPhotoResponseFromGlasses", { enumerable: true, get: function () { return glasses_to_cloud_1.isPhotoResponse; } });
Object.defineProperty(exports, "isRtmpStreamStatusFromGlasses", { enumerable: true, get: function () { return glasses_to_cloud_1.isRtmpStreamStatus; } });
Object.defineProperty(exports, "isKeepAliveAck", { enumerable: true, get: function () { return glasses_to_cloud_1.isKeepAliveAck; } });
Object.defineProperty(exports, "isPhoneNotificationDismissed", { enumerable: true, get: function () { return glasses_to_cloud_1.isPhoneNotificationDismissed; } });
var cloud_to_glasses_1 = require("./types/messages/cloud-to-glasses");
Object.defineProperty(exports, "isConnectionAck", { enumerable: true, get: function () { return cloud_to_glasses_1.isConnectionAck; } });
Object.defineProperty(exports, "isDisplayEvent", { enumerable: true, get: function () { return cloud_to_glasses_1.isDisplayEvent; } });
Object.defineProperty(exports, "isAppStateChange", { enumerable: true, get: function () { return cloud_to_glasses_1.isAppStateChange; } });
Object.defineProperty(exports, "isPhotoRequest", { enumerable: true, get: function () { return cloud_to_glasses_1.isPhotoRequest; } });
Object.defineProperty(exports, "isSettingsUpdateToGlasses", { enumerable: true, get: function () { return cloud_to_glasses_1.isSettingsUpdate; } });
Object.defineProperty(exports, "isStartRtmpStream", { enumerable: true, get: function () { return cloud_to_glasses_1.isStartRtmpStream; } });
Object.defineProperty(exports, "isStopRtmpStream", { enumerable: true, get: function () { return cloud_to_glasses_1.isStopRtmpStream; } });
Object.defineProperty(exports, "isKeepRtmpStreamAlive", { enumerable: true, get: function () { return cloud_to_glasses_1.isKeepRtmpStreamAlive; } });
var app_to_cloud_1 = require("./types/messages/app-to-cloud");
Object.defineProperty(exports, "isAppConnectionInit", { enumerable: true, get: function () { return app_to_cloud_1.isAppConnectionInit; } });
Object.defineProperty(exports, "isAppSubscriptionUpdate", { enumerable: true, get: function () { return app_to_cloud_1.isAppSubscriptionUpdate; } });
Object.defineProperty(exports, "isDisplayRequest", { enumerable: true, get: function () { return app_to_cloud_1.isDisplayRequest; } });
Object.defineProperty(exports, "isRtmpStreamRequest", { enumerable: true, get: function () { return app_to_cloud_1.isRtmpStreamRequest; } });
Object.defineProperty(exports, "isRtmpStreamStopRequest", { enumerable: true, get: function () { return app_to_cloud_1.isRtmpStreamStopRequest; } });
Object.defineProperty(exports, "isPhotoRequestFromApp", { enumerable: true, get: function () { return app_to_cloud_1.isPhotoRequest; } });
// Export setting-related types
var models_1 = require("./types/models");
Object.defineProperty(exports, "validateAppConfig", { enumerable: true, get: function () { return models_1.validateAppConfig; } });
// Export app session modules
__exportStar(require("./app/session/modules"), exports);
