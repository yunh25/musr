/**
 * @fileoverview Capability Discovery Types
 *
 * Defines the structure for device capability profiles that Apps can query
 * to determine what hardware and software features are available on the
 * connected smart glasses.
 */
export interface CameraCapabilities {
    resolution?: {
        width: number;
        height: number;
    };
    hasHDR?: boolean;
    hasFocus?: boolean;
    video: {
        canRecord: boolean;
        canStream: boolean;
        supportedStreamTypes?: string[];
        supportedResolutions?: {
            width: number;
            height: number;
        }[];
    };
}
export interface DisplayCapabilities {
    count?: number;
    isColor?: boolean;
    color?: string;
    canDisplayBitmap?: boolean;
    resolution?: {
        width: number;
        height: number;
    };
    fieldOfView?: {
        horizontal?: number;
        vertical?: number;
    };
    maxTextLines?: number;
    adjustBrightness?: boolean;
}
export interface MicrophoneCapabilities {
    count?: number;
    hasVAD?: boolean;
}
export interface SpeakerCapabilities {
    count?: number;
    isPrivate?: boolean;
}
export interface IMUCapabilities {
    axisCount?: number;
    hasAccelerometer?: boolean;
    hasCompass?: boolean;
    hasGyroscope?: boolean;
}
export interface ButtonCapabilities {
    count?: number;
    buttons?: {
        type: "press" | "swipe1d" | "swipe2d";
        events: string[];
        isCapacitive?: boolean;
    }[];
}
export interface LightCapabilities {
    count?: number;
    lights?: {
        isFullColor: boolean;
        color?: string;
    }[];
}
export interface PowerCapabilities {
    hasExternalBattery: boolean;
}
export interface Capabilities {
    modelName: string;
    hasCamera: boolean;
    camera: CameraCapabilities | null;
    hasDisplay: boolean;
    display: DisplayCapabilities | null;
    hasMicrophone: boolean;
    microphone: MicrophoneCapabilities | null;
    hasSpeaker: boolean;
    speaker: SpeakerCapabilities | null;
    hasIMU: boolean;
    imu: IMUCapabilities | null;
    hasButton: boolean;
    button: ButtonCapabilities | null;
    hasLight: boolean;
    light: LightCapabilities | null;
    power: PowerCapabilities;
    hasWifi: boolean;
}
//# sourceMappingURL=capabilities.d.ts.map