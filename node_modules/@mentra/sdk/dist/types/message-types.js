"use strict";
// src/message-types.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.DashboardMessageTypes = exports.UpdateTypes = exports.ResponseTypes = exports.EventTypes = exports.ControlActionTypes = exports.CloudToAppMessageType = exports.AppToCloudMessageType = exports.CloudToGlassesMessageType = exports.GlassesToCloudMessageType = void 0;
/**
 * Types of messages from glasses to cloud
 */
var GlassesToCloudMessageType;
(function (GlassesToCloudMessageType) {
    // Control actions
    GlassesToCloudMessageType["CONNECTION_INIT"] = "connection_init";
    GlassesToCloudMessageType["REQUEST_SETTINGS"] = "request_settings";
    // START_APP = 'start_app',
    // STOP_APP = 'stop_app',
    GlassesToCloudMessageType["START_APP"] = "start_app";
    GlassesToCloudMessageType["STOP_APP"] = "stop_app";
    GlassesToCloudMessageType["DASHBOARD_STATE"] = "dashboard_state";
    GlassesToCloudMessageType["OPEN_DASHBOARD"] = "open_dashboard";
    // Mentra Live
    GlassesToCloudMessageType["PHOTO_RESPONSE"] = "photo_response";
    // Local Transcription
    GlassesToCloudMessageType["LOCAL_TRANSCRIPTION"] = "local_transcription";
    // RTMP streaming
    GlassesToCloudMessageType["RTMP_STREAM_STATUS"] = "rtmp_stream_status";
    GlassesToCloudMessageType["KEEP_ALIVE_ACK"] = "keep_alive_ack";
    // OPEN_DASHBOARD = 'open_dashboard',
    // Events and data
    // BUTTON_PRESS = 'button_press',
    // HEAD_POSITION = 'head_position',
    // GLASSES_BATTERY_UPDATE = 'glasses_battery_update',
    // PHONE_BATTERY_UPDATE = 'phone_battery_update',
    // GLASSES_CONNECTION_STATE = 'glasses_connection_state',
    // LOCATION_UPDATE = 'location_update',
    // PHONE_NOTIFICATION = 'phone_notification',
    // PHONE_NOTIFICATION_DISMISSED = 'phone_notification_dismissed'
    GlassesToCloudMessageType["BUTTON_PRESS"] = "button_press";
    GlassesToCloudMessageType["HEAD_POSITION"] = "head_position";
    GlassesToCloudMessageType["GLASSES_BATTERY_UPDATE"] = "glasses_battery_update";
    GlassesToCloudMessageType["PHONE_BATTERY_UPDATE"] = "phone_battery_update";
    GlassesToCloudMessageType["GLASSES_CONNECTION_STATE"] = "glasses_connection_state";
    GlassesToCloudMessageType["LOCATION_UPDATE"] = "location_update";
    GlassesToCloudMessageType["VPS_COORDINATES"] = "vps_coordinates";
    GlassesToCloudMessageType["VAD"] = "VAD";
    GlassesToCloudMessageType["PHONE_NOTIFICATION"] = "phone_notification";
    GlassesToCloudMessageType["PHONE_NOTIFICATION_DISMISSED"] = "phone_notification_dismissed";
    GlassesToCloudMessageType["CALENDAR_EVENT"] = "calendar_event";
    GlassesToCloudMessageType["MENTRAOS_SETTINGS_UPDATE_REQUEST"] = "settings_update_request";
    GlassesToCloudMessageType["CORE_STATUS_UPDATE"] = "core_status_update";
    GlassesToCloudMessageType["PHOTO_TAKEN"] = "photo_taken";
    GlassesToCloudMessageType["AUDIO_PLAY_RESPONSE"] = "audio_play_response";
})(GlassesToCloudMessageType || (exports.GlassesToCloudMessageType = GlassesToCloudMessageType = {}));
/**
 * Types of messages from cloud to glasses
 */
var CloudToGlassesMessageType;
(function (CloudToGlassesMessageType) {
    // Responses
    CloudToGlassesMessageType["CONNECTION_ACK"] = "connection_ack";
    CloudToGlassesMessageType["CONNECTION_ERROR"] = "connection_error";
    CloudToGlassesMessageType["AUTH_ERROR"] = "auth_error";
    // Updates
    CloudToGlassesMessageType["DISPLAY_EVENT"] = "display_event";
    CloudToGlassesMessageType["APP_STATE_CHANGE"] = "app_state_change";
    CloudToGlassesMessageType["MICROPHONE_STATE_CHANGE"] = "microphone_state_change";
    CloudToGlassesMessageType["PHOTO_REQUEST"] = "photo_request";
    CloudToGlassesMessageType["AUDIO_PLAY_REQUEST"] = "audio_play_request";
    CloudToGlassesMessageType["AUDIO_STOP_REQUEST"] = "audio_stop_request";
    CloudToGlassesMessageType["SETTINGS_UPDATE"] = "settings_update";
    // RTMP streaming
    CloudToGlassesMessageType["START_RTMP_STREAM"] = "start_rtmp_stream";
    CloudToGlassesMessageType["STOP_RTMP_STREAM"] = "stop_rtmp_stream";
    CloudToGlassesMessageType["KEEP_RTMP_STREAM_ALIVE"] = "keep_rtmp_stream_alive";
    // Dashboard updates
    CloudToGlassesMessageType["DASHBOARD_MODE_CHANGE"] = "dashboard_mode_change";
    CloudToGlassesMessageType["DASHBOARD_ALWAYS_ON_CHANGE"] = "dashboard_always_on_change";
    // Location Service
    CloudToGlassesMessageType["SET_LOCATION_TIER"] = "set_location_tier";
    CloudToGlassesMessageType["REQUEST_SINGLE_LOCATION"] = "request_single_location";
    CloudToGlassesMessageType["WEBSOCKET_ERROR"] = "websocket_error";
})(CloudToGlassesMessageType || (exports.CloudToGlassesMessageType = CloudToGlassesMessageType = {}));
/**
 * Types of messages from Apps to cloud
 */
var AppToCloudMessageType;
(function (AppToCloudMessageType) {
    // Commands
    AppToCloudMessageType["CONNECTION_INIT"] = "tpa_connection_init";
    AppToCloudMessageType["SUBSCRIPTION_UPDATE"] = "subscription_update";
    AppToCloudMessageType["LOCATION_POLL_REQUEST"] = "location_poll_request";
    // Requests
    AppToCloudMessageType["DISPLAY_REQUEST"] = "display_event";
    AppToCloudMessageType["PHOTO_REQUEST"] = "photo_request";
    AppToCloudMessageType["AUDIO_PLAY_REQUEST"] = "audio_play_request";
    AppToCloudMessageType["AUDIO_STOP_REQUEST"] = "audio_stop_request";
    // RTMP streaming
    AppToCloudMessageType["RTMP_STREAM_REQUEST"] = "rtmp_stream_request";
    AppToCloudMessageType["RTMP_STREAM_STOP"] = "rtmp_stream_stop";
    // Managed RTMP streaming
    AppToCloudMessageType["MANAGED_STREAM_REQUEST"] = "managed_stream_request";
    AppToCloudMessageType["MANAGED_STREAM_STOP"] = "managed_stream_stop";
    // Stream status check (both managed and unmanaged)
    AppToCloudMessageType["STREAM_STATUS_CHECK"] = "stream_status_check";
    // Dashboard requests
    AppToCloudMessageType["DASHBOARD_CONTENT_UPDATE"] = "dashboard_content_update";
    AppToCloudMessageType["DASHBOARD_MODE_CHANGE"] = "dashboard_mode_change";
    AppToCloudMessageType["DASHBOARD_SYSTEM_UPDATE"] = "dashboard_system_update";
    // App-to-App Communication
    AppToCloudMessageType["APP_BROADCAST_MESSAGE"] = "app_broadcast_message";
    AppToCloudMessageType["APP_DIRECT_MESSAGE"] = "app_direct_message";
    AppToCloudMessageType["APP_USER_DISCOVERY"] = "app_user_discovery";
    AppToCloudMessageType["APP_ROOM_JOIN"] = "app_room_join";
    AppToCloudMessageType["APP_ROOM_LEAVE"] = "app_room_leave";
})(AppToCloudMessageType || (exports.AppToCloudMessageType = AppToCloudMessageType = {}));
/**
 * Types of messages from cloud to Apps
 */
var CloudToAppMessageType;
(function (CloudToAppMessageType) {
    // Responses
    CloudToAppMessageType["CONNECTION_ACK"] = "tpa_connection_ack";
    CloudToAppMessageType["CONNECTION_ERROR"] = "tpa_connection_error";
    // Updates
    CloudToAppMessageType["APP_STOPPED"] = "app_stopped";
    CloudToAppMessageType["SETTINGS_UPDATE"] = "settings_update";
    CloudToAppMessageType["CAPABILITIES_UPDATE"] = "capabilities_update";
    // Dashboard updates
    CloudToAppMessageType["DASHBOARD_MODE_CHANGED"] = "dashboard_mode_changed";
    CloudToAppMessageType["DASHBOARD_ALWAYS_ON_CHANGED"] = "dashboard_always_on_changed";
    // Stream data
    CloudToAppMessageType["DATA_STREAM"] = "data_stream";
    // Media responses
    CloudToAppMessageType["PHOTO_RESPONSE"] = "photo_response";
    CloudToAppMessageType["AUDIO_PLAY_RESPONSE"] = "audio_play_response";
    CloudToAppMessageType["RTMP_STREAM_STATUS"] = "rtmp_stream_status";
    CloudToAppMessageType["MANAGED_STREAM_STATUS"] = "managed_stream_status";
    CloudToAppMessageType["STREAM_STATUS_CHECK_RESPONSE"] = "stream_status_check_response";
    CloudToAppMessageType["WEBSOCKET_ERROR"] = "websocket_error";
    // Permissions
    CloudToAppMessageType["PERMISSION_ERROR"] = "permission_error";
    // General purpose messaging
    CloudToAppMessageType["CUSTOM_MESSAGE"] = "custom_message";
    // App-to-App Communication Responses
    CloudToAppMessageType["APP_MESSAGE_RECEIVED"] = "app_message_received";
    CloudToAppMessageType["APP_USER_JOINED"] = "app_user_joined";
    CloudToAppMessageType["APP_USER_LEFT"] = "app_user_left";
    CloudToAppMessageType["APP_ROOM_UPDATED"] = "app_room_updated";
    CloudToAppMessageType["APP_DIRECT_MESSAGE_RESPONSE"] = "app_direct_message_response";
})(CloudToAppMessageType || (exports.CloudToAppMessageType = CloudToAppMessageType = {}));
/**
 * Control action message types (subset of GlassesToCloudMessageType)
 */
exports.ControlActionTypes = [
    GlassesToCloudMessageType.CONNECTION_INIT,
    GlassesToCloudMessageType.START_APP,
    GlassesToCloudMessageType.STOP_APP,
    GlassesToCloudMessageType.DASHBOARD_STATE,
    GlassesToCloudMessageType.OPEN_DASHBOARD,
];
/**
 * Event message types (subset of GlassesToCloudMessageType)
 */
exports.EventTypes = [
    GlassesToCloudMessageType.BUTTON_PRESS,
    GlassesToCloudMessageType.HEAD_POSITION,
    GlassesToCloudMessageType.GLASSES_BATTERY_UPDATE,
    GlassesToCloudMessageType.PHONE_BATTERY_UPDATE,
    GlassesToCloudMessageType.GLASSES_CONNECTION_STATE,
    GlassesToCloudMessageType.LOCATION_UPDATE,
    GlassesToCloudMessageType.VPS_COORDINATES,
    GlassesToCloudMessageType.VAD,
    GlassesToCloudMessageType.PHONE_NOTIFICATION,
    GlassesToCloudMessageType.PHONE_NOTIFICATION_DISMISSED,
    GlassesToCloudMessageType.CALENDAR_EVENT,
    GlassesToCloudMessageType.MENTRAOS_SETTINGS_UPDATE_REQUEST,
    GlassesToCloudMessageType.CORE_STATUS_UPDATE,
    GlassesToCloudMessageType.LOCAL_TRANSCRIPTION,
];
/**
 * Response message types (subset of CloudToGlassesMessageType)
 */
exports.ResponseTypes = [
    CloudToGlassesMessageType.CONNECTION_ACK,
    CloudToGlassesMessageType.CONNECTION_ERROR,
    CloudToGlassesMessageType.AUTH_ERROR,
];
/**
 * Update message types (subset of CloudToGlassesMessageType)
 */
exports.UpdateTypes = [
    CloudToGlassesMessageType.DISPLAY_EVENT,
    CloudToGlassesMessageType.APP_STATE_CHANGE,
    CloudToGlassesMessageType.MICROPHONE_STATE_CHANGE,
    CloudToGlassesMessageType.PHOTO_REQUEST,
    CloudToGlassesMessageType.AUDIO_PLAY_REQUEST,
    CloudToGlassesMessageType.AUDIO_STOP_REQUEST,
    CloudToGlassesMessageType.SETTINGS_UPDATE,
    CloudToGlassesMessageType.DASHBOARD_MODE_CHANGE,
    CloudToGlassesMessageType.DASHBOARD_ALWAYS_ON_CHANGE,
    CloudToGlassesMessageType.START_RTMP_STREAM,
    CloudToGlassesMessageType.STOP_RTMP_STREAM,
    CloudToGlassesMessageType.KEEP_RTMP_STREAM_ALIVE,
];
/**
 * Dashboard message types
 */
exports.DashboardMessageTypes = [
    AppToCloudMessageType.DASHBOARD_CONTENT_UPDATE,
    AppToCloudMessageType.DASHBOARD_MODE_CHANGE,
    AppToCloudMessageType.DASHBOARD_SYSTEM_UPDATE,
    CloudToAppMessageType.DASHBOARD_MODE_CHANGED,
    CloudToAppMessageType.DASHBOARD_ALWAYS_ON_CHANGED,
];
