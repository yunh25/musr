"use strict";
// src/enums.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.HardwareRequirementLevel = exports.HardwareType = exports.AppSettingType = exports.ViewType = exports.LayoutType = exports.Language = exports.AppState = exports.AppType = void 0;
/**
 * Types of Third-Party Applications (Apps)
 */
var AppType;
(function (AppType) {
    AppType["SYSTEM_DASHBOARD"] = "system_dashboard";
    AppType["BACKGROUND"] = "background";
    AppType["STANDARD"] = "standard";
})(AppType || (exports.AppType = AppType = {}));
// TODO(isaiah): doesn't seem like this is actually used anywhere, remove?
/**
 * Application states in the system
 */
var AppState;
(function (AppState) {
    AppState["NOT_INSTALLED"] = "not_installed";
    AppState["INSTALLED"] = "installed";
    AppState["BOOTING"] = "booting";
    AppState["RUNNING"] = "running";
    AppState["STOPPED"] = "stopped";
    AppState["ERROR"] = "error";
})(AppState || (exports.AppState = AppState = {}));
/**
 * Supported languages
 */
var Language;
(function (Language) {
    Language["EN"] = "en";
    Language["ES"] = "es";
    Language["FR"] = "fr";
    // TODO: Add more languages
})(Language || (exports.Language = Language = {}));
/**
 * Types of layouts for displaying content
 */
var LayoutType;
(function (LayoutType) {
    LayoutType["TEXT_WALL"] = "text_wall";
    LayoutType["DOUBLE_TEXT_WALL"] = "double_text_wall";
    LayoutType["DASHBOARD_CARD"] = "dashboard_card";
    LayoutType["REFERENCE_CARD"] = "reference_card";
    LayoutType["BITMAP_VIEW"] = "bitmap_view";
    LayoutType["BITMAP_ANIMATION"] = "bitmap_animation";
    LayoutType["CLEAR_VIEW"] = "clear_view";
})(LayoutType || (exports.LayoutType = LayoutType = {}));
/**
 * Types of views for displaying content
 */
var ViewType;
(function (ViewType) {
    ViewType["DASHBOARD"] = "dashboard";
    ViewType["ALWAYS_ON"] = "always_on";
    ViewType["MAIN"] = "main";
})(ViewType || (exports.ViewType = ViewType = {}));
// Types for AppSettings
var AppSettingType;
(function (AppSettingType) {
    AppSettingType["TOGGLE"] = "toggle";
    AppSettingType["TEXT"] = "text";
    AppSettingType["SELECT"] = "select";
    AppSettingType["SLIDER"] = "slider";
    AppSettingType["GROUP"] = "group";
    AppSettingType["TEXT_NO_SAVE_BUTTON"] = "text_no_save_button";
    AppSettingType["SELECT_WITH_SEARCH"] = "select_with_search";
    AppSettingType["MULTISELECT"] = "multiselect";
    AppSettingType["TITLE_VALUE"] = "titleValue";
    AppSettingType["NUMERIC_INPUT"] = "numeric_input";
    AppSettingType["TIME_PICKER"] = "time_picker";
})(AppSettingType || (exports.AppSettingType = AppSettingType = {}));
// | { type: "toggle"; key: string; label: string; defaultValue: boolean }
// | { type: "text"; key: string; label: string; defaultValue?: string }
// | { type: "select"; key: string; label: string; options: { label: string; value: string }[]; defaultValue?: string };
/**
 * Types of hardware components that apps can require
 */
var HardwareType;
(function (HardwareType) {
    HardwareType["CAMERA"] = "CAMERA";
    HardwareType["DISPLAY"] = "DISPLAY";
    HardwareType["MICROPHONE"] = "MICROPHONE";
    HardwareType["SPEAKER"] = "SPEAKER";
    HardwareType["IMU"] = "IMU";
    HardwareType["BUTTON"] = "BUTTON";
    HardwareType["LIGHT"] = "LIGHT";
    HardwareType["WIFI"] = "WIFI";
})(HardwareType || (exports.HardwareType = HardwareType = {}));
/**
 * Levels of hardware requirements
 */
var HardwareRequirementLevel;
(function (HardwareRequirementLevel) {
    HardwareRequirementLevel["REQUIRED"] = "REQUIRED";
    HardwareRequirementLevel["OPTIONAL"] = "OPTIONAL";
})(HardwareRequirementLevel || (exports.HardwareRequirementLevel = HardwareRequirementLevel = {}));
