/**
 * Types of messages from glasses to cloud
 */
export declare enum GlassesToCloudMessageType {
    CONNECTION_INIT = "connection_init",
    REQUEST_SETTINGS = "request_settings",
    START_APP = "start_app",
    STOP_APP = "stop_app",
    DASHBOARD_STATE = "dashboard_state",
    OPEN_DASHBOARD = "open_dashboard",
    PHOTO_RESPONSE = "photo_response",
    LOCAL_TRANSCRIPTION = "local_transcription",
    RTMP_STREAM_STATUS = "rtmp_stream_status",
    KEEP_ALIVE_ACK = "keep_alive_ack",
    BUTTON_PRESS = "button_press",
    HEAD_POSITION = "head_position",
    GLASSES_BATTERY_UPDATE = "glasses_battery_update",
    PHONE_BATTERY_UPDATE = "phone_battery_update",
    GLASSES_CONNECTION_STATE = "glasses_connection_state",
    LOCATION_UPDATE = "location_update",
    VPS_COORDINATES = "vps_coordinates",
    VAD = "VAD",
    PHONE_NOTIFICATION = "phone_notification",
    PHONE_NOTIFICATION_DISMISSED = "phone_notification_dismissed",
    CALENDAR_EVENT = "calendar_event",
    MENTRAOS_SETTINGS_UPDATE_REQUEST = "settings_update_request",
    CORE_STATUS_UPDATE = "core_status_update",
    PHOTO_TAKEN = "photo_taken",
    AUDIO_PLAY_RESPONSE = "audio_play_response"
}
/**
 * Types of messages from cloud to glasses
 */
export declare enum CloudToGlassesMessageType {
    CONNECTION_ACK = "connection_ack",
    CONNECTION_ERROR = "connection_error",
    AUTH_ERROR = "auth_error",
    DISPLAY_EVENT = "display_event",
    APP_STATE_CHANGE = "app_state_change",
    MICROPHONE_STATE_CHANGE = "microphone_state_change",
    PHOTO_REQUEST = "photo_request",
    AUDIO_PLAY_REQUEST = "audio_play_request",
    AUDIO_STOP_REQUEST = "audio_stop_request",
    SETTINGS_UPDATE = "settings_update",
    START_RTMP_STREAM = "start_rtmp_stream",
    STOP_RTMP_STREAM = "stop_rtmp_stream",
    KEEP_RTMP_STREAM_ALIVE = "keep_rtmp_stream_alive",
    DASHBOARD_MODE_CHANGE = "dashboard_mode_change",
    DASHBOARD_ALWAYS_ON_CHANGE = "dashboard_always_on_change",
    SET_LOCATION_TIER = "set_location_tier",
    REQUEST_SINGLE_LOCATION = "request_single_location",
    WEBSOCKET_ERROR = "websocket_error"
}
/**
 * Types of messages from Apps to cloud
 */
export declare enum AppToCloudMessageType {
    CONNECTION_INIT = "tpa_connection_init",
    SUBSCRIPTION_UPDATE = "subscription_update",
    LOCATION_POLL_REQUEST = "location_poll_request",
    DISPLAY_REQUEST = "display_event",
    PHOTO_REQUEST = "photo_request",
    AUDIO_PLAY_REQUEST = "audio_play_request",
    AUDIO_STOP_REQUEST = "audio_stop_request",
    RTMP_STREAM_REQUEST = "rtmp_stream_request",
    RTMP_STREAM_STOP = "rtmp_stream_stop",
    MANAGED_STREAM_REQUEST = "managed_stream_request",
    MANAGED_STREAM_STOP = "managed_stream_stop",
    STREAM_STATUS_CHECK = "stream_status_check",
    DASHBOARD_CONTENT_UPDATE = "dashboard_content_update",
    DASHBOARD_MODE_CHANGE = "dashboard_mode_change",
    DASHBOARD_SYSTEM_UPDATE = "dashboard_system_update",
    APP_BROADCAST_MESSAGE = "app_broadcast_message",
    APP_DIRECT_MESSAGE = "app_direct_message",
    APP_USER_DISCOVERY = "app_user_discovery",
    APP_ROOM_JOIN = "app_room_join",
    APP_ROOM_LEAVE = "app_room_leave"
}
/**
 * Types of messages from cloud to Apps
 */
export declare enum CloudToAppMessageType {
    CONNECTION_ACK = "tpa_connection_ack",
    CONNECTION_ERROR = "tpa_connection_error",
    APP_STOPPED = "app_stopped",
    SETTINGS_UPDATE = "settings_update",
    CAPABILITIES_UPDATE = "capabilities_update",
    DASHBOARD_MODE_CHANGED = "dashboard_mode_changed",
    DASHBOARD_ALWAYS_ON_CHANGED = "dashboard_always_on_changed",
    DATA_STREAM = "data_stream",
    PHOTO_RESPONSE = "photo_response",
    AUDIO_PLAY_RESPONSE = "audio_play_response",
    RTMP_STREAM_STATUS = "rtmp_stream_status",
    MANAGED_STREAM_STATUS = "managed_stream_status",
    STREAM_STATUS_CHECK_RESPONSE = "stream_status_check_response",
    WEBSOCKET_ERROR = "websocket_error",
    PERMISSION_ERROR = "permission_error",
    CUSTOM_MESSAGE = "custom_message",
    APP_MESSAGE_RECEIVED = "app_message_received",
    APP_USER_JOINED = "app_user_joined",
    APP_USER_LEFT = "app_user_left",
    APP_ROOM_UPDATED = "app_room_updated",
    APP_DIRECT_MESSAGE_RESPONSE = "app_direct_message_response"
}
/**
 * Control action message types (subset of GlassesToCloudMessageType)
 */
export declare const ControlActionTypes: readonly [GlassesToCloudMessageType.CONNECTION_INIT, GlassesToCloudMessageType.START_APP, GlassesToCloudMessageType.STOP_APP, GlassesToCloudMessageType.DASHBOARD_STATE, GlassesToCloudMessageType.OPEN_DASHBOARD];
/**
 * Event message types (subset of GlassesToCloudMessageType)
 */
export declare const EventTypes: readonly [GlassesToCloudMessageType.BUTTON_PRESS, GlassesToCloudMessageType.HEAD_POSITION, GlassesToCloudMessageType.GLASSES_BATTERY_UPDATE, GlassesToCloudMessageType.PHONE_BATTERY_UPDATE, GlassesToCloudMessageType.GLASSES_CONNECTION_STATE, GlassesToCloudMessageType.LOCATION_UPDATE, GlassesToCloudMessageType.VPS_COORDINATES, GlassesToCloudMessageType.VAD, GlassesToCloudMessageType.PHONE_NOTIFICATION, GlassesToCloudMessageType.PHONE_NOTIFICATION_DISMISSED, GlassesToCloudMessageType.CALENDAR_EVENT, GlassesToCloudMessageType.MENTRAOS_SETTINGS_UPDATE_REQUEST, GlassesToCloudMessageType.CORE_STATUS_UPDATE, GlassesToCloudMessageType.LOCAL_TRANSCRIPTION];
/**
 * Response message types (subset of CloudToGlassesMessageType)
 */
export declare const ResponseTypes: readonly [CloudToGlassesMessageType.CONNECTION_ACK, CloudToGlassesMessageType.CONNECTION_ERROR, CloudToGlassesMessageType.AUTH_ERROR];
/**
 * Update message types (subset of CloudToGlassesMessageType)
 */
export declare const UpdateTypes: readonly [CloudToGlassesMessageType.DISPLAY_EVENT, CloudToGlassesMessageType.APP_STATE_CHANGE, CloudToGlassesMessageType.MICROPHONE_STATE_CHANGE, CloudToGlassesMessageType.PHOTO_REQUEST, CloudToGlassesMessageType.AUDIO_PLAY_REQUEST, CloudToGlassesMessageType.AUDIO_STOP_REQUEST, CloudToGlassesMessageType.SETTINGS_UPDATE, CloudToGlassesMessageType.DASHBOARD_MODE_CHANGE, CloudToGlassesMessageType.DASHBOARD_ALWAYS_ON_CHANGE, CloudToGlassesMessageType.START_RTMP_STREAM, CloudToGlassesMessageType.STOP_RTMP_STREAM, CloudToGlassesMessageType.KEEP_RTMP_STREAM_ALIVE];
/**
 * Dashboard message types
 */
export declare const DashboardMessageTypes: readonly [AppToCloudMessageType.DASHBOARD_CONTENT_UPDATE, AppToCloudMessageType.DASHBOARD_MODE_CHANGE, AppToCloudMessageType.DASHBOARD_SYSTEM_UPDATE, CloudToAppMessageType.DASHBOARD_MODE_CHANGED, CloudToAppMessageType.DASHBOARD_ALWAYS_ON_CHANGED];
//# sourceMappingURL=message-types.d.ts.map