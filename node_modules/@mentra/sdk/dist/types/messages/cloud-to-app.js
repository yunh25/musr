"use strict";
// src/messages/cloud-to-app.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAppConnectionAck = isAppConnectionAck;
exports.isAppConnectionError = isAppConnectionError;
exports.isAppStopped = isAppStopped;
exports.isSettingsUpdate = isSettingsUpdate;
exports.isCapabilitiesUpdate = isCapabilitiesUpdate;
exports.isDataStream = isDataStream;
exports.isAudioChunk = isAudioChunk;
exports.isDashboardModeChanged = isDashboardModeChanged;
exports.isDashboardAlwaysOnChanged = isDashboardAlwaysOnChanged;
exports.isManagedStreamStatus = isManagedStreamStatus;
exports.isRtmpStreamStatus = isRtmpStreamStatus;
exports.isPhotoResponse = isPhotoResponse;
exports.isStreamStatusCheckResponse = isStreamStatusCheckResponse;
exports.isAudioPlayResponse = isAudioPlayResponse;
exports.isAppMessageReceived = isAppMessageReceived;
exports.isAppUserJoined = isAppUserJoined;
exports.isAppUserLeft = isAppUserLeft;
const message_types_1 = require("../message-types");
const streams_1 = require("../streams");
//===========================================================
// Type guards
//===========================================================
function isAppConnectionAck(message) {
    return message.type === message_types_1.CloudToAppMessageType.CONNECTION_ACK;
}
function isAppConnectionError(message) {
    return (message.type === message_types_1.CloudToAppMessageType.CONNECTION_ERROR ||
        message.type === "connection_error");
}
function isAppStopped(message) {
    return message.type === message_types_1.CloudToAppMessageType.APP_STOPPED;
}
function isSettingsUpdate(message) {
    return message.type === message_types_1.CloudToAppMessageType.SETTINGS_UPDATE;
}
function isCapabilitiesUpdate(message) {
    return message.type === message_types_1.CloudToAppMessageType.CAPABILITIES_UPDATE;
}
function isDataStream(message) {
    return message.type === message_types_1.CloudToAppMessageType.DATA_STREAM;
}
function isAudioChunk(message) {
    return message.type === streams_1.StreamType.AUDIO_CHUNK;
}
function isDashboardModeChanged(message) {
    return message.type === message_types_1.CloudToAppMessageType.DASHBOARD_MODE_CHANGED;
}
function isDashboardAlwaysOnChanged(message) {
    return message.type === message_types_1.CloudToAppMessageType.DASHBOARD_ALWAYS_ON_CHANGED;
}
function isManagedStreamStatus(message) {
    return message.type === message_types_1.CloudToAppMessageType.MANAGED_STREAM_STATUS;
}
function isRtmpStreamStatus(message) {
    return message.type === message_types_1.GlassesToCloudMessageType.RTMP_STREAM_STATUS;
}
function isPhotoResponse(message) {
    return message.type === message_types_1.GlassesToCloudMessageType.PHOTO_RESPONSE;
}
function isStreamStatusCheckResponse(message) {
    return message.type === message_types_1.CloudToAppMessageType.STREAM_STATUS_CHECK_RESPONSE;
}
function isAudioPlayResponse(message) {
    return message.type === message_types_1.CloudToAppMessageType.AUDIO_PLAY_RESPONSE;
}
// New type guards for App-to-App communication
function isAppMessageReceived(message) {
    return message.type === message_types_1.CloudToAppMessageType.APP_MESSAGE_RECEIVED;
}
function isAppUserJoined(message) {
    return message.type === message_types_1.CloudToAppMessageType.APP_USER_JOINED;
}
function isAppUserLeft(message) {
    return message.type === message_types_1.CloudToAppMessageType.APP_USER_LEFT;
}
